<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.12</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.rrd.c1ux</groupId>
	<artifactId>api</artifactId>
	<version>${revision}</version>
	<packaging>jar</packaging>
	<name>ConnectOne Order Entry API</name>
	<description>ConnectOne Order Entry API</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<elasticsearch.version>6.4.3</elasticsearch.version>
		<java.version>11</java.version>
		<spring.framework.version>3.2.18.RELEASE</spring.framework.version>
		<revision>1.0.0-SNAPSHOT</revision>
		<org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
		<skipUTs>false</skipUTs>
	</properties>
	<dependencies>
		<!-- base framework dependencies -->

		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch-core</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch-x-content</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch.plugin</groupId>
			<artifactId>rank-eval-client</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch.plugin</groupId>
			<artifactId>lang-mustache-client</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-saml2-service-provider</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.github.ulisesbocchio</groupId>
		    <artifactId>jasypt-spring-boot</artifactId>
		    <version>3.0.5</version>
		</dependency>

		<!-- cache libraries-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version> 
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>			

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>jcc</artifactId>			
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.ccil.cowan.tagsoup/tagsoup -->
		<dependency>
		    <groupId>org.ccil.cowan.tagsoup</groupId>
		    <artifactId>tagsoup</artifactId>
		    <version>1.2.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.session</groupId>
	    	<artifactId>spring-session-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.session</groupId>
		    <artifactId>spring-session-jdbc</artifactId>
		</dependency>

		<!-- added after initial project generation via spring initializr -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.3</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>5.1.3</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.6</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>1.6.6</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl -->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j-impl</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-suite-engine</artifactId>
		    <scope>test</scope>
		</dependency>

		<!-- CustomPoint specific dependencies -->		
		<dependency>
			<groupId>com.rrd.custompoint</groupId>
			<artifactId>custompoint-bundle</artifactId>
			<version>8.3.13.1329-SNAPSHOT</version>
			<exclusions>
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
				<exclusion> 
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.sourceforge.wurfl</groupId>
					<artifactId>wurfl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>			
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.3.6</version>
		</dependency>
		
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.8</version>
		</dependency>

		<dependency>
		    <groupId>com.sun.xml.messaging.saaj</groupId>
		    <artifactId>saaj-impl</artifactId>
		    <version>1.5.2</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.xml.soap</groupId>
		    <artifactId>saaj-api</artifactId>
		    <version>1.3.5</version>
		</dependency>
		
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.17.2</version>
		</dependency>		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-maven-plugin</artifactId>
				<version>3.0.5</version>
			</plugin>
	        <plugin>
	          <artifactId>maven-jar-plugin</artifactId>
	          <configuration>
				<excludes>
					<!-- remove local environment configs from build artifact-->
					<exclude>**/application-LOCAL.yml</exclude>
				</excludes>
	          </configuration>
	        </plugin>
		</plugins>
	</build>

	<profiles>
		<!-- THIS PROFILE WILL ALWAYS RUN UNLESS THE "local" PROFILE IS SPECIFIED -->
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<addResources>true</addResources>
							<executable>true</executable>
							<layers>
								<enabled>true</enabled>
							</layers>
							<image>
								<bindings>
									<binding>${basedir}/bindings/ca-certificates:/platform/bindings/ca-certificates</binding>
								</bindings>
								<builder>gcr.io/paketo-buildpacks/builder:base</builder>
								<buildpacks>
									<buildpack>gcr.io/paketo-buildpacks/ca-certificates:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/amazon-corretto:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/syft:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/executable-jar:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/dist-zip:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/spring-boot:latest</buildpack>
								</buildpacks>
							</image>
						</configuration>
						<executions>
							<execution>
								<id>repackage</id>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
							<execution>
								<id>build-info</id>
								<goals>
									<goal>build-info</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.5.1</version>
						<configuration>
							<annotationProcessorPaths>
								<path>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
									<version>${lombok.version}</version>
								</path>
								<dependency>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok-mapstruct-binding</artifactId>
									<version>0.2.0</version>
								</dependency>
								<path>
									<groupId>org.mapstruct</groupId>
									<artifactId>mapstruct-processor</artifactId>
									<version>${org.mapstruct.version}</version>
								</path>
							</annotationProcessorPaths>								
							<compilerArgs>
								<compilerArg>
									-Amapstruct.defaultComponentModel=spring
								</compilerArg>
							</compilerArgs>
						</configuration>
					</plugin>			

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M6</version>
						<configuration>
							<skipTests>${skipUTs}</skipTests>
							<includes>
								<include>**/*.java</include>
							</includes>
							<!-- suppress logging noise from tests, only show maven summary -->
						    <redirectTestOutputToFile>true</redirectTestOutputToFile>
						</configuration>
					</plugin>
		
					<!-- generate code coverage reports-->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.3.1</version>
						<executions>
							<execution>
								<!-- 
									Execute this on every incremental build or project update in
									STS / Eclipse.  The workspace doesn't always put test resources 
									in the required classpath folder.  This causes problems for 
									running JUnits.  
								-->
								<?m2e execute onConfiguration,onIncremental?>
								<id></id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>testResources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
									<resources>${project.testResources}</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
				</plugins>
			</build>
		</profile>

		<!-- THIS PROFILE WILL RUN ONLY WHEN THE "local" PROFILE IS SPECIFIED -->
		<!-- Profile specific changes:
			1) Add maven-jar-plugin: So that Class-Path entries are added to the manifest.
			This is being added so that an executable jar can be run locally with the specified 
			CP folders copied one level below the jar.
		 -->
		<profile>
			<id>local</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<executable>true</executable>
							<layers>
								<enabled>true</enabled>
							</layers>
							<image>
								<bindings>
									<binding>${basedir}/bindings/ca-certificates:/platform/bindings/ca-certificates</binding>
								</bindings>
								<builder>gcr.io/paketo-buildpacks/builder:base</builder>
								<buildpacks>
									<buildpack>gcr.io/paketo-buildpacks/ca-certificates:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/amazon-corretto:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/syft:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/executable-jar:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/dist-zip:latest</buildpack>
									<buildpack>gcr.io/paketo-buildpacks/spring-boot:latest</buildpack>
								</buildpacks>
							</image>
						</configuration>
						<executions>
							<execution>
								<id>repackage</id>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
							<execution>
								<id>build-info</id>
								<goals>
									<goal>build-info</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<!-- Add Class-Path to manifest for running locally -->
					<plugin>
					    <groupId>org.apache.maven.plugins</groupId>
					    <artifactId>maven-jar-plugin</artifactId>
					    <version>3.2.2</version>
					    <configuration>
					        <archive>
					            <manifestEntries>
					            	<Class-Path>Properties/ translation/ mq/ conf/</Class-Path>
					            </manifestEntries>
					        </archive>
					    </configuration>
					</plugin>
		
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.5.1</version>
						<configuration>
							<annotationProcessorPaths>
								<path>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
									<version>${lombok.version}</version>
								</path>
								<dependency>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok-mapstruct-binding</artifactId>
									<version>0.2.0</version>
								</dependency>
								<path>
									<groupId>org.mapstruct</groupId>
									<artifactId>mapstruct-processor</artifactId>
									<version>${org.mapstruct.version}</version>
								</path>
							</annotationProcessorPaths>								
							<compilerArgs>
								<compilerArg>
									-Amapstruct.defaultComponentModel=spring
								</compilerArg>
							</compilerArgs>
						</configuration>
					</plugin>			
		
					<!-- generate code coverage reports-->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>shared-default</id>
			<name>shared-default</name>
			<url>https://pkgs.dev.azure.com/rrdonnelley/shared/_packaging/shared-default/maven/v1</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
