apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
  namespace: c1ux
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---

# c1ux-order-entry Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c1ux-order-entry-api
  namespace: c1ux
spec:
  replicas: 1
  selector:
    matchLabels:
      app: c1ux-order-entry-api
  template:
    metadata:
      labels:
        app: c1ux-order-entry-api
    spec:
      containers:
      - name: c1ux-order-entry-api
        image: 893686724547.dkr.ecr.us-east-1.amazonaws.com/c1ux/c1ux-order-entry:#{IMAGE_TAG}#
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            memory: "2048M"
            cpu: "250m"
          limits:
            memory: "3072M"
            cpu: "500m"
        ports:
        - containerPort: 80
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        env:
        - name: SERVER_SSL_ENABLED
          value: "false"
        - name: SERVER_PORT
          value: "80"
        - name: LOADER_PATH
          value: "/data-efs/cp-properties/"
        - name: CLASSPATH
          value: "/data-efs/cp-properties:/data-efs/cp-translation"
        - name: LOGGING_FILE_PATH
          value: "/data-efs/logs"
        - name: LOGGING_FILE_NAME
          value: "/data-efs/logs/c1ux-api.log"
        - name: SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_PINGFED_IDENTITYPROVIDER_ENTITY-ID
          value: "c1ux.login.local.rrd"
        - name: SPRING_SECURITY_SAML2_RELYINGPARTY_REGISTRATION_PINGFED_IDENTITYPROVIDER_SINGLESIGNON_URL
          value: "https://dev.custompoint.rrd.com/xs2"
        - name: JAVA_TOOL_OPTIONS
          value: "-Xms256m -Xmx2048m -Dspring.profiles.active=EKS-DEV -Dtt.arch.env.var=X4 -DXS.SERVER.TOKEN=DEV -DXS.SERVER.ID=1 -DXS.APP.LOCALE=en_US -Djxl.nogc=true -Dfile.encoding=UTF-8 -DCP_ENV=DEV -DENV_CODE=DEV -Dcom.sun.tools.javac.main.largebranch=true -Dtt.ParmCheckClass=com.wallace.atwinxs.framework.util.AtWinXSParmChecker -Dtt.PortalCookieClass=com.rrd.custompoint.framework.component.AuthServicesProcessorImpl -Dtt.SessionAuditClass=com.wallace.atwinxs.admin.dao.LoginAuditDAO -Dtt.SiteClass=com.wallace.atwinxs.framework.dao.LoginProcessDAO -Dtt.UserClass=com.wallace.atwinxs.framework.dao.LoginProcessDAO -Dorg.apache.commons.collections.enableUnsafeSerialization=true -DSERVER_LOG_ROOT=/data-efs/logs -Dmqconnector=/data-efs/cp-runtimes/mq -Ddb2pwd_path=/data-efs/cp-runtimes/conf/db2_pwd.txt -Djavax.net.ssl.trustStore=/data-efs/jvm-security/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
        volumeMounts:
        - name: efs-volume-1
          mountPath: /data-efs
      volumes:
      - name: efs-volume-1
        persistentVolumeClaim:
          claimName: efs-claim

# c1ux-order-entry Service
---
apiVersion: v1
kind: Service
metadata:
  name: c1ux-order-entry-api
  namespace: c1ux
spec:
  selector:
    app: c1ux-order-entry-api
  ports:
  - port: 80
    targetPort: 80
---

# c1ux-order-entry Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: c1ux-order-entry-api
  namespace: c1ux
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: c1ux-order-entry-api
            port: 
              number: 80
